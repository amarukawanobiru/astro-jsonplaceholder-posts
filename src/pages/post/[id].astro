---
import PageLayout from "../../layouts/PageLayout.astro";
import { Image } from "astro:assets";
import authorIcon_01 from "../../assets/author-icon_01.png";
import authorIcon_02 from "../../assets/author-icon_02.png";
import authorIcon_03 from "../../assets/author-icon_03.png";
import authorIcon_04 from "../../assets/author-icon_04.png";
import authorIcon_05 from "../../assets/author-icon_05.png";
import authorIcon_06 from "../../assets/author-icon_06.png";
import authorIcon_07 from "../../assets/author-icon_07.png";
import authorIcon_08 from "../../assets/author-icon_08.png";
import authorIcon_09 from "../../assets/author-icon_09.png";
import authorIcon_10 from "../../assets/author-icon_10.png";
import { endpoint } from "../../lib/config";
import { fetchApi } from "../../scripts/api";
import type { Post } from "../../lib/config";
import type { Author } from "../../lib/config";

export const getStaticPaths = async () => {
  const allPosts = await fetchApi(endpoint.posts);
  const authorsData = await fetchApi(endpoint.authors);

  return allPosts.map((post: Post) => {
    const postAuthor = authorsData.find((author: Author) => author.id === post.userId);

    return {
      params: { id: post.id },
      props: { post, totalPages: allPosts.length, author: postAuthor },
    };
  });
}

const { id } = Astro.params;
const { post, totalPages, author } = Astro.props;

const authorIcons = [
  authorIcon_01,
  authorIcon_02,
  authorIcon_03,
  authorIcon_04,
  authorIcon_05,
  authorIcon_06,
  authorIcon_07,
  authorIcon_08,
  authorIcon_09,
  authorIcon_10,
];

const pageStatus = {
  title: post.title,
  description: "I am not good at English, but I tried my best to make it."
}
---

<PageLayout title={ pageStatus.title } description={ pageStatus.description }>
  <section class="post section mt8rem">
    <h1 class="post__title">{ post.title }</h1>
    <div class="post__body">
      <p>{ post.body }</p>
    </div>
    <div class="author">
      <a class="author__link" href={ `/author/${ author.id }` }>
        <Image class="author__image" src={ authorIcons[author.id - 1] } alt="Author icon" />
        <div class="author__body">
          <h2 class="author__username">{ author.username }</h2>
          <p class="author__name">by: { author.name }</p>
        </div>
      </a>
    </div>
    <div class="page-links">
      {
        Number(id) - 1 > 0 ?
        <a href={ `/post/${ Number(id) - 1 }` }>{ `<<` } prev post</a> :
        <span>{ `<<` } prev post</span>
      }
      {
        Number(id) < Number(totalPages) ?
        <a href={ `/post/${ Number(id) + 1 }` }>next post { `>>` }</a> :
        <span>next post { `>>` }</span>
      }
    </div>
  </section>
</PageLayout>

<style lang="scss">
  @use "../../styles/colors" as *;

  .post {
    width: 768px;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;

    &__title {
      font-size: clamp(2rem, 0.929rem + 5.36vw, 3.5rem);
      font-family: "EB Garamond", serif;
    }

    &__body {
      margin-top: 4rem;
      font-size: clamp(1rem, 0.821rem + 0.89vw, 1.25rem);
      line-height: 1.7;
    }
  }

  .author {
    margin-top: 4rem;

    &__link {
      width: fit-content;
      display: flex;
      align-items: center;
      gap: 0 1.5rem;

      @media (hover: hover) {
        &:hover {
          .author__image {
            opacity: 0.6;
          }

          .author__body {
            color: $color-accent;
          }
        }
      }
    }

    &__image {
      width: 64px;
      transition: opacity 0.1s ease-in-out;
    }

    &__body {
      transition: color 0.1s ease-in-out;
    }

    &__username {
      margin-top: .5rem;
      font-size: 1.125rem;
      font-weight: 700;
    }

    &__name {
      display: block;
      font-size: .875rem;
      font-weight: 400;
      font-style: italic;
    }
  }

  .page-links {
    font-size: 1rem;
    margin-top: 4rem;
    display: flex;
    justify-content: space-between;

    a {
      border-bottom: 1px solid $color-text;
      transition-property: border-color, color;
      transition-duration: 0.1s;
      transition-timing-function: ease-in-out;

      @media (hover: hover) {
        &:hover {
          border-color: $color-accent;
          color: $color-accent;
        }
      }
    }

    span {
      opacity: .3;
    }
  }
</style>